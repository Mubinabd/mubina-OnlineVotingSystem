definitions:
  genproto.CandidateRes:
    properties:
      election:
        $ref: '#/definitions/genproto.ElectionRes'
      id:
        type: string
      public:
        $ref: '#/definitions/genproto.PublicRes'
    type: object
  genproto.CandidatiesGetAllResp:
    properties:
      candidaties:
        items:
          $ref: '#/definitions/genproto.CandidateRes'
        type: array
    type: object
  genproto.CreateCandidateReq:
    properties:
      election_id:
        type: string
      public_id:
        type: string
    type: object
  genproto.CreateElectionReq:
    properties:
      date:
        type: string
      name:
        type: string
    type: object
  genproto.CreatePublicVoteReq:
    properties:
      candidate_id:
        type: string
      election_id:
        type: string
      public_id:
        type: string
    type: object
  genproto.ElectionRes:
    properties:
      date:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  genproto.ElectionsGetAllResp:
    properties:
      elections:
        items:
          $ref: '#/definitions/genproto.ElectionRes'
        type: array
    type: object
  genproto.Filter:
    properties:
      limit:
        type: integer
      offset:
        type: integer
    type: object
  genproto.GetAllPartysResponse:
    properties:
      party:
        items:
          $ref: '#/definitions/genproto.PartyRes'
        type: array
    type: object
  genproto.GetAllPublicsResponse:
    properties:
      public:
        items:
          $ref: '#/definitions/genproto.PublicRes'
        type: array
    type: object
  genproto.GetByIdReq:
    properties:
      id:
        type: string
    type: object
  genproto.PartyCreate:
    properties:
      description:
        type: string
      name:
        type: string
      opened_date:
        type: string
      slogan:
        type: string
    type: object
  genproto.PartyRes:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      opened_date:
        type: string
      slogan:
        type: string
    type: object
  genproto.PublicCreate:
    properties:
      birthday:
        type: string
      first_name:
        type: string
      gender:
        type: string
      last_name:
        type: string
      nation:
        type: string
      party_id:
        type: string
    type: object
  genproto.PublicRes:
    properties:
      birthday:
        type: string
      first_name:
        type: string
      gender:
        type: string
      id:
        type: string
      last_name:
        type: string
      nation:
        type: string
      party:
        $ref: '#/definitions/genproto.PartyRes'
    type: object
  genproto.PublicVoteRes:
    properties:
      election:
        $ref: '#/definitions/genproto.ElectionRes'
      id:
        type: string
      public:
        $ref: '#/definitions/genproto.PublicRes'
    type: object
  genproto.PublicVotesGetAllResp:
    properties:
      publicvotes:
        items:
          $ref: '#/definitions/genproto.PublicVoteRes'
        type: array
    type: object
  genproto.Void:
    type: object
info:
  contact: {}
paths:
  /Party:
    get:
      consumes:
      - application/json
      description: Endpoint for getting all Partys
      parameters:
      - in: query
        name: name
        type: string
      - in: query
        name: opened_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully getted Partys
          schema:
            $ref: '#/definitions/genproto.GetAllPartysResponse'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to get Partys
          schema:
            type: string
      summary: Get All Partys
      tags:
      - Party
    post:
      consumes:
      - application/json
      description: Endpoint for creating a new Party
      parameters:
      - description: Party creation request payload
        in: body
        name: Party
        required: true
        schema:
          $ref: '#/definitions/genproto.PartyCreate'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created Party
          schema:
            $ref: '#/definitions/genproto.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to create Party
          schema:
            type: string
      summary: Create a new Party
      tags:
      - Party
  /Party/:id:
    delete:
      consumes:
      - application/json
      description: Endpoint for deleting Party
      parameters:
      - description: Party ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted Party
          schema:
            $ref: '#/definitions/genproto.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to delete Party
          schema:
            type: string
      summary: Delete Party
      tags:
      - Party
    get:
      consumes:
      - application/json
      description: Endpoint for getting Party
      parameters:
      - in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully getted Party
          schema:
            $ref: '#/definitions/genproto.CandidateRes'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to get Party
          schema:
            type: string
      summary: Get By Id Party
      tags:
      - Party
    put:
      consumes:
      - application/json
      description: Endpoint for updating Party
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Party updaing request payload
        in: body
        name: Party
        required: true
        schema:
          $ref: '#/definitions/genproto.PartyCreate'
      responses:
        "200":
          description: Successfully updated Party
          schema:
            $ref: '#/definitions/genproto.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to update Party
          schema:
            type: string
      summary: Update Party
      tags:
      - Party
  /candidate:
    post:
      consumes:
      - application/json
      description: Endpoint for creating a new candidate
      parameters:
      - description: Candidate creation request payload
        in: body
        name: candidate
        required: true
        schema:
          $ref: '#/definitions/genproto.CreateCandidateReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created candidate
          schema:
            $ref: '#/definitions/genproto.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to create candidate
          schema:
            type: string
      summary: Create a new candidate
      tags:
      - Candidate
  /candidate/:id:
    get:
      consumes:
      - application/json
      description: Endpoint for getting candidate
      parameters:
      - in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully getted candidate
          schema:
            $ref: '#/definitions/genproto.CandidateRes'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to get candidate
          schema:
            type: string
      summary: Get Candidate
      tags:
      - Candidate
  /candidate/all:
    get:
      consumes:
      - application/json
      description: Endpoint for getting all candidates
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully getted candidates
          schema:
            $ref: '#/definitions/genproto.CandidatiesGetAllResp'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to get candidates
          schema:
            type: string
      summary: Get All Candidates
      tags:
      - Candidate
  /election:
    post:
      consumes:
      - application/json
      description: Endpoint for creating a new election
      parameters:
      - description: Election creation request payload
        in: body
        name: election
        required: true
        schema:
          $ref: '#/definitions/genproto.CreateElectionReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created election
          schema:
            $ref: '#/definitions/genproto.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to create election
          schema:
            type: string
      summary: Create a new election
      tags:
      - Election
  /election/:id:
    delete:
      consumes:
      - application/json
      description: Endpoint for deleting election
      parameters:
      - description: Election deleting request payload
        in: body
        name: election
        required: true
        schema:
          $ref: '#/definitions/genproto.GetByIdReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted election
          schema:
            $ref: '#/definitions/genproto.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to delete election
          schema:
            type: string
      summary: Delete election
      tags:
      - Election
    get:
      consumes:
      - application/json
      description: Endpoint for getting election
      parameters:
      - in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully getted election
          schema:
            $ref: '#/definitions/genproto.ElectionRes'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to get election
          schema:
            type: string
      summary: Get Election
      tags:
      - Election
  /election/all:
    get:
      consumes:
      - application/json
      description: Endpoint for getting all public votes
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully getted public Votes
          schema:
            $ref: '#/definitions/genproto.PublicVotesGetAllResp'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to get public votes
          schema:
            type: string
      summary: Get All Public Votes
      tags:
      - Public Vote
  /election/update:
    put:
      consumes:
      - application/json
      description: Endpoint for updating election
      parameters:
      - description: Election updaing request payload
        in: body
        name: election
        required: true
        schema:
          $ref: '#/definitions/genproto.GetByIdReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated election
          schema:
            $ref: '#/definitions/genproto.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to update election
          schema:
            type: string
      summary: Update election
      tags:
      - Election
  /public:
    get:
      consumes:
      - application/json
      description: Endpoint for getting all publics
      parameters:
      - in: query
        name: gender
        type: string
      - in: query
        name: nation
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully getted publics
          schema:
            $ref: '#/definitions/genproto.GetAllPublicsResponse'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to get publics
          schema:
            type: string
      summary: Get All Publics
      tags:
      - Public
    post:
      consumes:
      - application/json
      description: Endpoint for creating a new public
      parameters:
      - description: Public creation request payload
        in: body
        name: public
        required: true
        schema:
          $ref: '#/definitions/genproto.PublicCreate'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created public
          schema:
            $ref: '#/definitions/genproto.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to create public
          schema:
            type: string
      summary: Create a new public
      tags:
      - Public
  /public/:id:
    delete:
      consumes:
      - application/json
      description: Endpoint for deleting public
      parameters:
      - description: Public ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted public
          schema:
            $ref: '#/definitions/genproto.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to delete public
          schema:
            type: string
      summary: Delete public
      tags:
      - Public
    get:
      consumes:
      - application/json
      description: Endpoint for getting public
      parameters:
      - in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully getted public
          schema:
            $ref: '#/definitions/genproto.CandidateRes'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to get public
          schema:
            type: string
      summary: Get By Id Public
      tags:
      - Public
    put:
      consumes:
      - application/json
      description: Endpoint for updating public
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Public updaing request payload
        in: body
        name: public
        required: true
        schema:
          $ref: '#/definitions/genproto.PublicCreate'
      responses:
        "200":
          description: Successfully updated public
          schema:
            $ref: '#/definitions/genproto.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to update public
          schema:
            type: string
      summary: Update public
      tags:
      - Public
  /publicvote:
    post:
      consumes:
      - application/json
      description: Endpoint for creating a new publicvote
      parameters:
      - description: publicVote creation request payload
        in: body
        name: publicvote
        required: true
        schema:
          $ref: '#/definitions/genproto.CreatePublicVoteReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created publicvote
          schema:
            $ref: '#/definitions/genproto.Void'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to create publicvote
          schema:
            type: string
      summary: Create a new publicvote
      tags:
      - Public Vote
swagger: "2.0"
